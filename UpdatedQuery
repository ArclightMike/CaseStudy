--First we'll set up some temp tables to make filtering easy.
CREATE TABLE #Q3Results
(
    TrnID INT,
    TrnTyp VARCHAR(MAX), --Note sure what all will be in here, so we'll do varchar max.
    PrdCod INT,
    PrdTyp VARCHAR(MAX), --Note sure what all will be in here, so we'll do varchar max.
    SleDat DATETIME,
    LocStt CHAR(2),
    SalPrc MONEY,
    PayTyp VARCHAR(MAX), --Assuming this will be like "cash" "credit", etc, but would ideally be ids.
);

CREATE TABLE #SouthEast
(
    LocStt CHAR(2)
);
INSERT INTO #SouthEast (LocStt) VALUES ('AL');
INSERT INTO #SouthEast (LocStt) VALUES ('AR');
INSERT INTO #SouthEast (LocStt) VALUES ('FL');
INSERT INTO #SouthEast (LocStt) VALUES ('GA');
INSERT INTO #SouthEast (LocStt) VALUES ('KY');
INSERT INTO #SouthEast (LocStt) VALUES ('LA');
INSERT INTO #SouthEast (LocStt) VALUES ('MS');
INSERT INTO #SouthEast (LocStt) VALUES ('NC');
INSERT INTO #SouthEast (LocStt) VALUES ('SC');
INSERT INTO #SouthEast (LocStt) VALUES ('TN');
INSERT INTO #SouthEast (LocStt) VALUES ('VA');

CREATE TABLE #GreatLakes
(
    LocStt CHAR(2)
);
INSERT INTO #GreatLakes (LocStt) VALUES ('IL');
INSERT INTO #GreatLakes (LocStt) VALUES ('IN');
INSERT INTO #GreatLakes (LocStt) VALUES ('MI');
INSERT INTO #GreatLakes (LocStt) VALUES ('MN');
INSERT INTO #GreatLakes (LocStt) VALUES ('OH');
INSERT INTO #GreatLakes (LocStt) VALUES ('PA');
INSERT INTO #GreatLakes (LocStt) VALUES ('WI');

--Set up South EastProduct Types, we can add remove easily in future uses.
CREATE TABLE #SouthEastProductTypes
(
    PrdTyp VARCHAR(MAX)
);
INSERT INTO #SouthEastProductTypes (PrdTyp) VALUES ('Furniture');
INSERT INTO #SouthEastProductTypes (PrdTyp) VALUES ('Kitchen Appliances');
INSERT INTO #SouthEastProductTypes (PrdTyp) VALUES ('Clothing');
INSERT INTO #SouthEastProductTypes (PrdTyp) VALUES ('Electronics');

--Set up Great Lakes Product Types, we can add remove easily in future uses.
CREATE TABLE #GreatLakesProductTypes
(
    PrdTyp VARCHAR(MAX)
);
INSERT INTO #GreatLakesProductTypes (PrdTyp) VALUES ('Kitchen Appliances');
INSERT INTO #GreatLakesProductTypes (PrdTyp) VALUES ('Clothing');
INSERT INTO #GreatLakesProductTypes (PrdTyp) VALUES ('Shoes');

--Set up California Product Types, we can add remove easily in future uses.
CREATE TABLE #CaliforniaProductTypes
(
    PrdTyp VARCHAR(MAX)
);
INSERT INTO #CaliforniaProductTypes (PrdTyp) VALUES ('Electronics');
INSERT INTO #CaliforniaProductTypes (PrdTyp) VALUES ('Shoes');

--Set up sales years, we can add remove easily in future uses.
CREATE TABLE #SalesYears
(
    SalesYear INT
);
INSERT INTO #SalesYears (SalesYear) VALUES (2018);
INSERT INTO #SalesYears (SalesYear) VALUES (2019);
INSERT INTO #SalesYears (SalesYear) VALUES (2020);

--Now fill the results table.

--Fill with southeast sales.  Table is only filtered by state, region products, and year.
INSERT INTO #Q3Results (TrnID, TrnTyp, PrdCod, PrdTyp, SleDat, LocStt, SalPrc, PayTyp)
SELECT s.[Transaction ID], s.[Transaction Type], s.[Product Code], s.[Product Type], s.[Date of Sale], s.[Location - State], s.[Sale Price], s.[Payment Type] 
FROM SalesTransactions s
JOIN #SouthEast se ON s.[Location - State] = se.LocStt
JOIN #SouthEastProductTypes pt ON s.[Product Type] = pt.PrdTyp
JOIN #SalesYears pt ON YEAR(s.[Date of Sale]) = pt.SalesYear;

--Fill with Great Lakes sales.  Table is only filtered by state, region products, and year.
INSERT INTO #Q3Results (TrnID, TrnTyp, PrdCod, PrdTyp, SleDat, LocStt, SalPrc, PayTyp)
SELECT s.[Transaction ID], s.[Transaction Type], s.[Product Code], s.[Product Type], s.[Date of Sale], s.[Location - State], s.[Sale Price], s.[Payment Type] 
FROM SalesTransactions s
JOIN #GreatLakes gl ON s.[Location - State] = gl.LocStt
JOIN #GreatLakesProductTypes pt ON s.[Product Type] = pt.PrdTyp
JOIN #SalesYears pt ON YEAR(s.[Date of Sale]) = pt.SalesYear;

--Fill with specific state sales.  Table is only filtered by state, region products, and year.
INSERT INTO #Q3Results (TrnID, TrnTyp, PrdCod, PrdTyp, SleDat, LocStt, SalPrc, PayTyp)
SELECT s.[Transaction ID], s.[Transaction Type], s.[Product Code], s.[Product Type], s.[Date of Sale], s.[Location - State], s.[Sale Price], s.[Payment Type] 
FROM SalesTransactions s
JOIN #CaliforniaProductTypes pt ON s.[Product Type] = pt.PrdTyp
JOIN #SalesYears pt ON YEAR(s.[Date of Sale]) = pt.SalesYear
WHERE s.[Location - State] = 'CA';

--Fill with nationwide toy sales.
INSERT INTO #Q3Results (TrnID, TrnTyp, PrdCod, PrdTyp, SleDat, LocStt, SalPrc, PayTyp)
SELECT s.[Transaction ID], s.[Transaction Type], s.[Product Code], s.[Product Type], s.[Date of Sale], s.[Location - State], s.[Sale Price], s.[Payment Type] 
FROM SalesTransactions s
JOIN #SalesYears pt ON YEAR(s.[Date of Sale]) = pt.SalesYear
WHERE [s.Product Type] = 'Toys'

--Return query

--Further filtering the results from temp table that were already filtered on state, product, and year.
SELECT TrnID, TrnTyp, PrdCod, PrdTyp, SleDat, LocStt, SalPrc, PayTyp
FROM #Q3Results
WHERE ((MONTH(SleDat) >= 7) AND (PrdCod NOT BETWEEN 1000 AND 1999));

--I wasn't clear on if the head of the furniture division wanted the same requirements around region and year,
-- but if so, then this query returns those results without the quarter.
SELECT TrnID, TrnTyp, PrdCod, PrdTyp, SleDat, LocStt, SalPrc, PayTyp
FROM #Q3Results
WHERE PrdTyp = 'Furniture';
--If there needs to be a single return query, we could union the results.

--Clean up the temp tables.
DROP TABLE #Q3Results;
DROP TABLE #SouthEast;
DROP TABLE #SouthEastProductTypes;
DROP TABLE #GreatLakesProductTypes;
DROP TABLE #CaliforniaProductTypes;
DROP TABLE #SalesYears;